@model  MyFinance.Web.Models.ReserveViewModel

@using (Html.BeginForm("AddReserve", "Reserves", FormMethod.Post, new { id = "addReserveForm", @class = "form-horizontal", role = "form" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Reserve.Name, new { @class = "col-md-4 control-label" })
        <div class="col-md-8">
            @Html.TextBoxFor(m => m.Reserve.Name, htmlAttributes: new { id = "res-name", @class = "form-control" })
            @Html.Hidden("res-name-0", "Vestuário")
            @Html.Hidden("res-name-1", "Material Escolar")
            @Html.Hidden("res-name-2", "IPVA + Seguro do Carro")
            @Html.Hidden("res-name-3", "IPTU")
            @Html.Hidden("res-name-4", "Troca do Carro")
            @Html.Hidden("res-name-5", "Próxima Viagem")
            @Html.Hidden("res-name-6", "Reforma da Casa")
            @Html.Hidden("res-name-7", "Meu Primeiro Milhão")
            @Html.Hidden("res-name-8", "Aposentadoria")
            @Html.Hidden("res-name-9", "Compra do Imóvel")
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Reserve.NameAbbreviation, new { @class = "col-md-4 control-label" })
        <div class=" col-md-4">
            @Html.TextBoxFor(m => m.Reserve.NameAbbreviation, htmlAttributes: new { id = "res-abb", @class = "form-control" })
            @Html.Hidden("res-abb-0", "V")
            @Html.Hidden("res-abb-1", "ME")
            @Html.Hidden("res-abb-2", "IPSeg")
            @Html.Hidden("res-abb-3", "IPTU")
            @Html.Hidden("res-abb-4", "TC")
            @Html.Hidden("res-abb-5", "PV")
            @Html.Hidden("res-abb-6", "RC")
            @Html.Hidden("res-abb-7", "PM")
            @Html.Hidden("res-abb-8", "A")
            @Html.Hidden("res-abb-9", "CI")
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Reserve.FinalExpectedValue, new { @class = "col-md-4 control-label" })
        <div class="col-md-4 input-group">
            @{
                if (Model.Reserve.FinalExpectedValue == 0M)
                {
                    Model.Reserve.FinalExpectedValue = 0.00M;
                }
            }
            <span class="input-group-addon">$</span>
            @Html.TextBoxFor(m => m.Reserve.FinalExpectedValue, htmlAttributes: new { id = "res-val", @class = "form-control value-mask" })
        </div>
        @Html.Hidden("res-val-0", "500,00")
        @Html.Hidden("res-val-1", "1000,00")
        @Html.Hidden("res-val-2", "2500,00")
        @Html.Hidden("res-val-3", "1200,00")
        @Html.Hidden("res-val-4", "20000,00")
        @Html.Hidden("res-val-5", "3000,00")
        @Html.Hidden("res-val-6", "10000,00")
        @Html.Hidden("res-val-7", "1000000,00")
        @Html.Hidden("res-val-8", "800000,00")
        @Html.Hidden("res-val-9", "200000,00")
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Reserve.DateToWithdraw, new { @class = "col-md-4 control-label" })
        <div class="col-md-3" style="padding-right: 0px">
            @Html.TextBoxFor(m => m.Reserve.DateToWithdraw, "{0:d}", htmlAttributes: new { id = "res-time", @class = "form-control datepicker" })
        </div>
    </div>
}

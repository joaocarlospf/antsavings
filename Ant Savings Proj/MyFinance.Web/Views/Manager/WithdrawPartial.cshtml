@model MyFinance.Web.Models.WithdrawViewModel

@using (Html.BeginForm("Withdraw", "Manager", FormMethod.Post, new { id = "withdrawForm", @class = "form-horizontal" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Origin, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Origin, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SelectedFundId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedFundId, Model.FundList, new { @class = "select-block" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SelectedReserveId, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.SelectedReserveId, Model.ReserveList, new { @class = "select-block" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Date, new { @class = "col-md-2 control-label" })
        <div class="col-md-3">
            @Html.TextBoxFor(m => m.Date, "{0:d}", new { @class = "form-control datepicker" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Value, new { @class = "col-md-2 control-label" })
        <div class="col-md-5 input-group">
            @{
                if (Model.Value == 0M)
                {
                    Model.Value = 0.00M;
                }
            }
            <span class="input-group-addon">$</span>
            @Html.TextBoxFor(m => m.Value, new { @class = "form-control value-mask" })
        </div>
    </div>
}